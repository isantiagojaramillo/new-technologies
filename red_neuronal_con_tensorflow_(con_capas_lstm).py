# -*- coding: utf-8 -*-
"""Red Neuronal con TensorFlow (con capas LSTM).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xSQkJHUTOUm3bipekGUZH-XCNcMNtQSo
"""

from tensorflow.keras.layers import LSTM

# Reshape para LSTM
x_train_lstm = x_train.reshape((x_train.shape[0], 1, x_train.shape[1]))
x_test_lstm = x_test.reshape((x_test.shape[0], 1, x_test.shape[1]))

# Definición del modelo con LSTM
model_lstm = Sequential([
    LSTM(64, input_shape=(x_train_lstm.shape[1], x_train_lstm.shape[2])),
    Dense(1)
])

# Compilación del modelo
model_lstm.compile(optimizer='adam', loss='mean_squared_error')

# Entrenamiento del modelo
model_lstm.fit(x_train_lstm, y_train, epochs=50, batch_size=32, verbose=0)

# Evaluación del modelo
mse_lstm_imputed = model_lstm.evaluate(x_test_lstm, y_test, verbose=0)
print("LSTM Mean Squared Error (with imputation):", mse_lstm_imputed)